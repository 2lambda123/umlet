<?xml version="1.0" encoding="UTF-8" standalone="no"?><umlet_diagram><help_text>// Uncomment the following line to change the fontsize:
// fontsize=14

// Welcome to UMLet!
//
// Double-click on UML elements to add them to the diagram.
// Edit element properties by modifying the text in this panel.
// Edit the files in the 'palettes' directory to create your own element palettes.
// Hold down Ctrl to select multiple elements.
// Press Del to delete elements.
// Press Ctrl-c to copy an element, and to store the whole UML diagram to the system clipboard.
// Select "Custom elements &gt; New..." to create new element types.
//
// This text will be stored with each diagram;  use it for notes.</help_text><zoom_level>5</zoom_level><element><type>com.umlet.element.base.Class</type><coordinates><x>150</x><y>4060</y><w>110</w><h>190</h></coordinates><panel_attributes>&lt;&lt;Perl Module&gt;&gt;
Package::Start.pm
--
_{enforce clean code}_
-use strict; [Declare Variables
 with the 'my' keyword]
-use warnings; [set warnings on]
--
_{sub handler}_
-$user_agent (user interfaces) :  
--IEMobile 7.7
--IEMobile 6.8
--Windows CE
--Tablet
--Nokia-N810
--Desktop
--
_{Responsibilities}_
-- If User Interface is 
   desktop the use frames
-- If User Interface is
   Mobile then input only
--
_{Returns}_
Apache response :: OK
fg=black
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>245</x><y>4065</y><w>49</w><h>69</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>40;10;25;10;25;60;10;60</additional_attributes></element><element><type>com.umlet.element.base.Note</type><coordinates><x>290</x><y>4060</y><w>90</w><h>55</h></coordinates><panel_attributes>Protocol connection
handler for Apache
returns toolbar and 
input for mobile interfaces 
and full options for desktop
interface.
bg=blue
fg=white</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>245</x><y>4130</y><w>74</w><h>45</h></coordinates><panel_attributes>lt=-
Produces&gt;</panel_attributes><additional_attributes>10;35;35;35;35;15;55;15</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>275</x><y>3835</y><w>212</w><h>324</h></coordinates><panel_attributes>lt=-
Or&gt;</panel_attributes><additional_attributes>10;315;10;290;185;290;185;10;50;10;50;15</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>305</x><y>4130</y><w>105</w><h>110</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Start
{Mobile}
--
_{Frames}_
-toolbar_frame
-input_frame
fg=black
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>290</x><y>3850</y><w>105</w><h>125</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Start
{Desktop}
--
{Frames}
--logo_frame
--toolbar_frame
-tabs_frame
-tracking_frame
-routeing_frame
-design_frame
-tracing_frame
-search_results_frame
-reports_frame
-input_frame

fg=black
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>340</x><y>3960</y><w>181</w><h>319</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
includes</panel_attributes><additional_attributes>10;10;10;20;145;20;145;300;90;300;90;310</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>345</x><y>4230</y><w>79</w><h>55</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
includes</panel_attributes><additional_attributes>10;10;10;35;70;35;70;45</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>305</x><y>4275</y><w>225</w><h>770</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::HTTP.js
--
{Function HTTP}
-set variables
--site_name
--user_agent
--end_point
--timeout (=300)
--
{Function HTTP.prototype.set_sitename}
-Sets namespace for
--sitename
--endpoint
--
--
{Function HTTP.prototype.newRequest}
-- Create and return a new XMLHttpRequest object.
-- Try list of factory functions until we find one
   that returns a non-null value
--Store factory for later use.
--
{Throw Exception}
XMLHttpRequest not supported
--If we get here, none of the factory candidates succeeded,
  so throw an exception now and for all future calls.
--
--
{Function HTTP.getResponse}
--Check the content type returned by the server
-Case : 
--text/xml[XML Document]
--text/json[JavaScript Object Notation]
--text/javascript[JavaScript-Obsolete]
--application/javascript[JavaScript]
--
--
--application/x-javascript[JavaScript registered MIME type]
----Parse the JavaScript code or JSON-encode values to
     JavaScript Value
----If response is greater than 10000 then
     return results in chunks 
--{Throw Exception}
--Return error,response length &amp; response
--
--
--default[treat response as plain text]
--
--
{Function HTTP.prototype.post}
--
_Parameters_
--url
--values
--callback_function
--callback_object
--errorHandler
--
--set the request to asynchronous
--encode the url
--send the request to the server
--
--
{Function HTTP.prototype.sync_post}
--
_Parameters_
--url
--values
--callback_function
--callback_object
--errorHandler
--timeout_period
--
--handles timeout requests
--
--
{Function HTTP.prototype.sync_get}
--Handles get requests in the same manner as post request function
--except handles request as synchronous
--
--
{Function HTTP.prototype.encodeFormData}
--Encode the property name/value pairs of an object 
  as if they were from an HTML form
--Concatenate name/value pairs seperated by '&amp;'
--
--
{Function HTTP.prototype.getHeaders}
--Builds the header portion of the url
--
--
{Function HTTP.prototype.parseHeaders}
--Parses the headers from an XMLHttpRequest Object and returns
  the header names and values as names and values of a new object
--Break the headers into lines and store in javascript objects
--
--
{Function HTTP.prototype.getLastModified}
--returns last_modified headers
--
--
{Function HTTP.prototype.load_script}
--
_Parameters_
--script_name
--target_doc
--callback
--
--returns nothing for user_agent IEMobile 7
--else calls script specified in script_name
--
--
{Function HTTP.prototype.load_resource}
--
_Parameters_
--resource
--type
--
--calls get_resource_url
--calls sync_get
--
--

fg=black
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>580</x><y>4075</y><w>185</w><h>260</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::scanner_login.html
--
{Script Tag}
--sets CSS dependant on mobile user_agent
--
{Function body_onload}
set variables for user and password
--
--
{Function signon()}
--declare and assign global variables
  username and password
--calls function sync_post passing the following values
----http.endpoint
----current sitename
----transaction : signon
----action : view
----username
----password
----handle_signon
----null
----null
--
{Exception}
--Please enter password
--Please enter username
--
--
{Function handle_signon}
--handles signon failed
                url timed out
                site not hosted at current url
                username and password invalid
--sets global variable for signon role
--reloads scanner_login.html
--



fg=black
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>335</x><y>4035</y><w>274</w><h>149</h></coordinates><panel_attributes>lt=-
Calls&gt;
</panel_attributes><additional_attributes>10;140;80;140;80;25;265;25;265;35</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>525</x><y>4320</y><w>104</w><h>50</h></coordinates><panel_attributes>lt=-
invokes&gt;</panel_attributes><additional_attributes>50;10;35;10;35;30;95;30;95;40</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>580</x><y>4360</y><w>185</w><h>95</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Scanner_toolbar.html
--
{Function body_onload}
--sets the input frame to Scanner_Main_Menu_1.html
--includes Singles_Frame_Application.js
--gets site details
fg=black
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>740</x><y>4130</y><w>123</w><h>268</h></coordinates><panel_attributes>lt=-
Invokes&gt;</panel_attributes><additional_attributes>10;260;45;260;45;30;115;30;115;55</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>810</x><y>4190</y><w>135</w><h>115</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Scanner_Main_Menu_1.html
--
--retrieves relevant css for mobile device
--
{Function body_onload()}
--calls render()
--
{Function Render()}
--creates buttons : 
  Transfer
  Movement
  Content
  Logout/Previous
  Next
--
fg=black
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>520</x><y>4275</y><w>331</w><h>429</h></coordinates><panel_attributes>lt=-
&lt;Calls and passes signoff</panel_attributes><additional_attributes>295;10;280;10;280;205;250;205;250;420;10;420</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>980</x><y>4045</y><w>160</w><h>95</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Scanner_Main_Menu_2.html
--
{Function Render()}
--creates buttons : 
  Action
  Pack
  Unpack
  Previous
  Next

fg=black
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>820</x><y>4045</y><w>245</w><h>255</h></coordinates><panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;
Calls&gt;</panel_attributes><additional_attributes>10;250;140;250;140;10;160;10</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>970</x><y>4145</y><w>180</w><h>130</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Scanner_Transfer.html
--
{Function update()}
--Calls sync_post
--passes action : insert
               from_container
               to_container
               effective_date
--if location is not null then transaction = movement
                              else transaction = transfer
--if material is not null then transaction = content
--
{Buttons}
--Accept
--Main Menu

bg=green
fg=black</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1030</x><y>4330</y><w>150</w><h>135</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Scanner_Movement.html
--
{Function update()}
--Calls sync_post
--passes action : insert
               container
               location
               transaction : movement
--Calls update_cb
--
{Buttons}
--Accept
--Main Menu
--
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>840</x><y>4200</y><w>220</w><h>205</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls&gt;</panel_attributes><additional_attributes>10;70;115;70;115;140;190;140</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>835</x><y>4100</y><w>225</w><h>205</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls&gt;</panel_attributes><additional_attributes>10;160;120;160;120;50;135;50</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>830</x><y>4360</y><w>175</w><h>245</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Single_Frame_Application
--
{Function Application.prototype.get}
--Returns Screen Painter Store Name
--
{Function Application.prototype.put}
--Sets Screen Painter Store Name
--
{Function Application.prototype.stop_being_busy}
--sets hourglass to off
--
{Function Application.prototype.start_being_busy}
--sets hourglass on
--
{Function Application.prototype.create_screen_painter}
--Invokes Screen_Painter.create passes
        screen_name
        target_name
        src
        use_window



bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>695</x><y>4365</y><w>143</w><h>50</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Invokes</panel_attributes><additional_attributes>10;30;135;30</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>835</x><y>4065</y><w>210</w><h>205</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Calls</panel_attributes><additional_attributes>45;125;45;105;105;105;105;45;150;45</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>830</x><y>4245</y><w>210</w><h>205</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
&lt;Calls</panel_attributes><additional_attributes>50;60;50;105;165;105;165;30</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>990</x><y>4105</y><w>290</w><h>205</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Invokes&gt;</panel_attributes><additional_attributes>45;65;175;65;175;150;10;150</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1245</x><y>4250</y><w>195</w><h>90</h></coordinates><panel_attributes>&lt;&lt;Common Functions&gt;&gt;
Package::Common Functions within various HTML objects
--
{These functions documented here are common to 
 all the referring objects and are documented seperately
 to avoid duplication}
--
--retrieves relevant stylesheet for mobile device
--
{Function update_cb()}
-- Accepts response_array
    if response_array is not null returns "Update Failed"
bg=blue
fg=white</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1120</x><y>4125</y><w>220</w><h>215</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Includes
</panel_attributes><additional_attributes>55;210;110;210;110;105;160;105;160;120</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1080</x><y>4120</y><w>230</w><h>205</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Includes</panel_attributes><additional_attributes>65;35;110;35;110;105;215;105;215;130</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>860</x><y>4170</y><w>210</w><h>215</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
&lt;Calls</panel_attributes><additional_attributes>35;20;35;10;105;10;105;115;170;115;170;95;150;95</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>695</x><y>4165</y><w>515</w><h>275</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Calls</panel_attributes><additional_attributes>160;25;160;10;105;10;105;160;510;160;510;270;370;270</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1050</x><y>4285</y><w>250</w><h>205</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Calls</panel_attributes><additional_attributes>45;70;145;70;145;140;10;140</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1255</x><y>4350</y><w>145</w><h>115</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Scanner_Content.html
--
{Function update()}
--Calls sync_post
--passes action : insert
               container
               material
               transaction : content
--Calls update_cb
--
{Buttons}
--Accept
--Main Menu
--
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1340</x><y>4125</y><w>220</w><h>235</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Includes</panel_attributes><additional_attributes>60;230;110;230;110;105;85;105;85;120</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>860</x><y>4025</y><w>475</w><h>545</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Calls</panel_attributes><additional_attributes>10;165;10;10;370;10;370;440;370;450;445;450;445;430;435;430</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1275</x><y>4305</y><w>240</w><h>205</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;140;135;140;135;70;45;70</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1260</x><y>4055</y><w>105</w><h>125</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Scanner_Action.html
--
{Function update()}
--Calls sync_post
--passes action : insert
               container
               location
               transaction : action
               event
               effective_date
--Calls update_cb
--
{Buttons}
--Accept
--Main Menu
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>995</x><y>3965</y><w>280</w><h>205</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;120;175;120;175;95;265;95</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1200</x><y>4095</y><w>220</w><h>205</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Includes</panel_attributes><additional_attributes>110;150;110;125;110;90;110;80</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1105</x><y>3920</y><w>210</w><h>255</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Calls</panel_attributes><additional_attributes>25;120;25;105;105;105;105;250;165;250</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1270</x><y>4015</y><w>210</w><h>205</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>20;150;105;150;105;65;55;65</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1405</x><y>4000</y><w>105</w><h>125</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Scanner_Pack.html
--
{Function update()}
--Calls sync_post
--passes action : insert
               container
               location
               transaction : pack
               from_container
               to_container
--Calls update_cb
--
{Buttons}
--Accept
--Main Menu
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1105</x><y>3905</y><w>395</w><h>215</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Calls</panel_attributes><additional_attributes>10;135;10;105;290;105;290;210;300;210</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1415</x><y>3960</y><w>210</w><h>205</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>20;150;105;150;105;65;55;65</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1275</x><y>4080</y><w>220</w><h>205</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Includes</panel_attributes><additional_attributes>55;170;55;145;110;145;110;70;165;70;165;45</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>995</x><y>3875</y><w>465</w><h>220</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Calls</panel_attributes><additional_attributes>450;120;450;105;195;105;195;215;10;215</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1260</x><y>3850</y><w>125</w><h>130</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Scanner_Unpack.html
--
{Function update()}
--Calls sync_post
--passes action : insert
               container
               location
               transaction : unpack
               container
               effective_date
--Calls update_cb
--
{Buttons}
--Accept
--Main Menu
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1375</x><y>3855</y><w>270</w><h>405</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Includes</panel_attributes><additional_attributes>10;10;40;10;40;115;160;115;160;360;40;360;40;395</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1280</x><y>3810</y><w>225</w><h>205</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;150;120;150;120;65;45;65</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>995</x><y>3860</y><w>265</w><h>205</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Calls</panel_attributes><additional_attributes>105;180;105;105;260;105</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1000</x><y>3845</y><w>305</w><h>265</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;260;155;260;155;105;245;105;245;20;260;20</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>990</x><y>3625</y><w>140</w><h>105</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Scanner_Main_Menu_3.html
--
--retrieves relevant css for mobile device
--
{Function body_onload()}
--calls render()
--
{Function Render()}
--creates buttons : 
  Repack
  Receive
  Dispatch
  Previous
--
fg=black
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>965</x><y>3710</y><w>145</w><h>345</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>130;335;130;30;10;30;10;10;35;10</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1270</x><y>3500</y><w>125</w><h>140</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Scanner_Repack.html
--
{Function update()}
--Calls sync_post
--passes action : insert
               container
               location
               transaction : repack
               from_container
               to_container
               effective_date
--Calls update_cb
--
{Buttons}
--Accept
--Main Menu
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1010</x><y>3500</y><w>295</w><h>220</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;195;130;195;130;120;250;120;250;10;260;10</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1270</x><y>3670</y><w>125</w><h>155</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Scanner_Receive.html
--
{Function update()}
--Calls sync_post
--passes transaction : receive
               action : insert
               trade_site
               container
               effective_date
   if  location is not null then pass
       transaction : movement
   if material is not null then pass
       transaction : content
--Calls update_cb
--
{Buttons}
--Accept
--Main Menu
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1045</x><y>3490</y><w>310</w><h>205</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Calls</panel_attributes><additional_attributes>10;130;10;105;205;105;205;135;225;135</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1070</x><y>3475</y><w>265</w><h>340</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Calls</panel_attributes><additional_attributes>10;145;10;105;160;105;160;335;200;335</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1010</x><y>3565</y><w>270</w><h>215</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
  
  



Calls</panel_attributes><additional_attributes>10;135;150;135;150;105;235;105;260;105</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1435</x><y>3530</y><w>125</w><h>175</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Scanner_Dispatch.html
--
{Function body_onload()}
--Calls sync_post
--passes transaction : trade_site
               action : list
               select : yes
--returns data to html screen
--
{Function update()}
--Calls sync_post
--passes action : list
               container
               location
               transaction : trade site
               select : yes
--Calls update_cb
--
{Buttons}
--Accept
--Main Menu
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1290</x><y>3645</y><w>225</w><h>205</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;160;120;160;120;50;45;50</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1290</x><y>3465</y><w>225</w><h>205</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;155;120;155;120;60;45;60</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1455</x><y>3540</y><w>225</w><h>205</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;145;120;145;120;70;40;70</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1055</x><y>3545</y><w>385</w><h>205</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Calls</panel_attributes><additional_attributes>40;80;40;65;105;65;105;105;365;105;365;150;380;150</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1015</x><y>3495</y><w>515</w><h>270</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;220;160;220;160;170;410;170;410;10;470;10;470;35</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1480</x><y>3830</y><w>150</w><h>120</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Scanner_Date.js
--
{Function db_to_date(db_date)}
--checks to see that db_date is a valid date
--if its not a valid date it returns current date
--if its a valid date it returns the same day but 
  previous month
--returns date
--
{Function date_to_db(date)}
--formats the date correctly for input 
  into the database
--returns date
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1340</x><y>3370</y><w>370</w><h>465</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Includes</panel_attributes><additional_attributes>10;125;10;105;260;105;260;310;260;455</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1350</x><y>3375</y><w>400</w><h>895</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Includes</panel_attributes><additional_attributes>10;120;10;105;290;105;290;880;90;880</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1430</x><y>3265</y><w>195</w><h>145</h></coordinates><panel_attributes>&lt;&lt;Common Functions&gt;&gt;
Package::Common Functions within various HTML objects
--
{These functions documented here are common to 
 all the referring objects and are documented seperately
 to avoid duplication}
--
--retrieves relevant stylesheet for mobile device
--
{Function trade_site_update_cb(response_array))}
--for IEMobile7.7 interfaces it has to delete the current
   data 1 element at a time
--for everything else it deletes the data in 1 statement
--Returns the data from the select data request
   to the html page
--
{Function update_cb(response_array))}
-- Accepts response_array
    if response_array is not null returns "Update Failed"
bg=blue
fg=white</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1385</x><y>3365</y><w>220</w><h>205</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Includes</panel_attributes><additional_attributes>110;165;110;45</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1385</x><y>3335</y><w>425</w><h>435</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Includes</panel_attributes><additional_attributes>10;430;315;430;315;10;240;10</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>290</x><y>3660</y><w>110</w><h>105</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Tabs.html
--
includes stylesheet.css
--
{Links}
--Tracking_Tab
--Routeing_Tab
--Design_Tab
--Tracing_Tab
--Search_Results_Tab
--Reports_Tab
--Input_Tab
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>320</x><y>3660</y><w>124</w><h>259</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;250;95;250;95;10;80;10</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>290</x><y>3590</y><w>115</w><h>35</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Logo.html
--
Includes image company_logo.gif

bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>325</x><y>3535</y><w>144</w><h>359</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;350;115;350;115;25;30;25;30;50</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>375</x><y>3385</y><w>190</w><h>170</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Login.html
--
{Function signon()}
--checks if the page is single frame interface
--If its 2 frames it references username and password
  from input_frame else if its 1 frames it references them
  from toolbar_frame
--calls sync_post 
   passes transaction : Signon
               action : view
               username
               password
               invokes handle_signon
--
{Function handle_signon(response_array)}
--if the response_array is empty 
  returns "Username and Password invalid"
--if the signon was successfull it points
  the toolbar_frame to Toolbar.html
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>330</x><y>3345</y><w>279</w><h>559</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;550;250;550;250;25;150;25;150;35</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>375</x><y>2895</y><w>190</w><h>475</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Toolbar.html
--
{Loads Scripts}
--Date_Selector.js
--SP_Menu.js
--Stylesheet.js
--Screen_Painter.js
--if the main screen is divided into 2 frames it loads
  Single_Frame_Application.js
  else it loads
  Application.js
--
{Tabs}
--Design
--Routeing
--Tracking
--Tracing
--Search Results
--Reports
--Input
--
{Function body_onload()}
--If the main screen is divided into 2 frames it invokes
  app.get_site_details()
  Screen_Painter.create('Single Frame Input', 'input');
--sets the hourglass icon to busy
--if the role is a super userit removes the 
  design tab and routeing tab
--gets the site_setup_list
--invokes the Date_Selector() function and returns the
  from_date_input and
  to_date_input
--sets focus to search_input
--stops the hourglass icon
--
{Function do_Search()}
--Calls sr_sp.actions and returns search results 
  based on the specified search parameters
--
{Function do_advanced_search()}
--Calls sr_sp.actions and returns the advanced_search
  screen
--
{Function do_trace()}
--Calls isp.actions() and builds screen_list_form
--
{Function body_onunload()}
--Calls screen_painter and closes current screen
--
{Function logoff()}
--Calls sync_post
   passes transaction : signoff
               action : view
               username
               password
--Calls signoff_cb()
--
{Function signoff_cb}
--Checks if the sign off was
   Failed
   Timed out
   or Successful

bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>315</x><y>2855</y><w>83</w><h>543</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Calls</panel_attributes><additional_attributes>75;35;75;30;30;30;30;535;55;535</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>230</x><y>2115</y><w>175</w><h>695</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Date_Selector.js
--
{function Date_Selector()}
--Accepts
         document
         date_element
         date_element_id
         value
         mode
--Creates the calender popup and sets the default 
   selected date to current date
--
{Function Date_Selector.prototype.add_element()}
--Checks the selected date is a valid date
--Calls Date_Selectobj.db_to_format to convert the
  date to a viewable format
--
{Function Date_Selector.db_to_format()}
--Accepts
        db_value
        mode
--if mode is datetime formats the date to datetime
   else formats as date
--
{Function Date_Selector.prototype.format}
--Also formats date as datetime or date depending on
  mode
--
{Function Date_Selector.prototype.create_content()}
--Creates all the HTML tables, buttons, layout and
  style scripts for the date calender popup
--
{Function Date_Selector.prototype.initialise_day()}
--Sets the current date as default
--
{Function Date_Selector.prototype.day_clicked()}
--Handles the onclick event when a date is selected
  and highlights selected date
--
{Function Date_Selector.prototype.DMY_string()}
--Returns the date in DD-MON-YYYY format
--
{Function Date_Selector.prototype.HMS_string()}
--Returns the hours minutes and seconds
{Function Date_Selector.prototype.DMY_HMS_string()}
--Concatenates the DMY_String with the HMS_sting
--
{Function Date_Selector.prototype.highlight_day()}
--Highlights the selected day with a blue background
  and white font colour
--
{Function Date_Selector.prototype.accepted()}
--if the accept button is pressed this hides the calendar
--returns selected date
--
{Function Date_Selector.prototype.cancelled()}
--hides the calendar
--
{Function Date_Selector.prototype.reset()}
--If the reset button is clicked changes the selected 
   day back to the default day
--
{Function Date_Selector.prototype.set_time()}
--Accepts
        Hours 
        Minutes
        Seconds
--Returns them in acceptable database format
--
{Function Date_Selector.date_to_db()}
--Accepts
       date
       mode
--if mode is datetime 
  then it returns the date and time in acceptable
  database formate
--if mode is date then only returns date in database
  format
--
{Function  Date_Selector.db_to_date()}
--Accepts
       db_date
       mode
--Returns database formatted date in javascript
   formate
--
{Function Date_Selector.prototype.set_and_show()}
--Accepts
       date_element
       mode
       evt
--Draws and shows the calendar popup
--
{Function Date_Selector.prototype.now()}
--Sets  the selected_date object to today
--


bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>5</x><y>2635</y><w>200</w><h>175</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::SP_Menu.js
--
{Function SP_Menu()}
--Accepts
      screen_painter
      document
--creates the relevant menu frame and hides it
--populates the menu items within the menu frame
--
{Function SP_Menu.prototype.show()}
--Accepts
       evt
--Populates the menu detail
--Makes the menu visible
--
{Function SP_Menu.prototype.position_popup()}
--Accepts
       evt
--Sets the current menu's position on the screen
--
{Function SP_Menu.prototype.hide()}
--Hides the current menu
--


bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>0</x><y>2445</y><w>200</w><h>140</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Stylesheet.js
--
{Function Stylesheet()}
--Accepts
       document
       menu
--creates the html element to include the relevant
  stylesheet for the current page
--
{Function Stylesheet.prototype.get_rules()}
--Returns the css rules for the current page
--
{Function Stylesheet.prototype.get_rule()}
--Accepts
       s
--Checks the validity of the rules retrieved from the get_rules()
  function
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>440</x><y>620</y><w>210</w><h>2190</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Screen_Painter.js
--
{Function Screen_Painter.get_screen_painter()}
--Accepts
        target_name
--returns the screen painter for the current page
--
{Function Screen_Painter.create()}
--Accepts
       screen_name
       target_name
       src
       use_window
       enable_owner_canvas
--Loads the menu for the target page
--Creates the page and page elements for the target_page
--
{Function Screen_Painter.Actions_cb()}
--Accepts
       evt
--Enables the indicator_img element
--
{Function Screen_Painter()}
--Accepts
       screen_name
       target_type
       target_name
       target
--Initialises the element arrays for the screen painter
--
{Function Screen_Painter.prototype.set_target()}
--Accepts 
       target
--Sets the target frame for the screen painter
--
{Functions Screen_Painter.prototype.fetch_screen()}
--Accepts 
       callback
       screen_name
       no_cache
--Calls sync_post
      passes 
          transaction : Screen
          action : blank
          screen : screen_name parameter
--
{Function Screen_Painter.set_screen_cb()}
--Accepts
       screen_array
       obj
--Fetches the next objects for the next array element
   in the screen array
--
{Function Screen_Painter.prototype.fetch_screen_details()}
--Accepts
       call_back
       screen_name
--calls sync_post
     passes : transaction : screen_detail
                   action : list
                   screen : screen_name
--Stores returned values in an array
--
{Function Screen_Painter.set_screen_details_cb()}
--Accepts 
       screen_details_array
       obj
--Call back function which assigns the screen_details_array
   passed back by the sync_post function to a local obj array
--
{Function Screen_Painter.prototype.check_row_for_headers()}
--Accepts 
       row
       no_of_cols
--parses table of data and returns the rows that contain 
  headers
--
{Function  Screen_Painter.prototype.process_grid_details()}
--process the entire table of data marking which
  rows are headers and which are detail
--
{Function Screen_Painter.prototype.show_grid_details()}
--Raises alerts for each row of the table showing which
   are header rows and which are detail rows.
--This function is used for testing purposes
--
{Function Screen_Painter.prototype.paint()}
--Populates the table data into the current screen
--
{Function Screen_Painter.prototype.add_stylesheet()}
--Adds the relevant stylesheet to the current screen
--
{Function Screen_Painter.prototype.render()}
--Renders the HTML elements for the page on the current
  screen
--
{Function Screen_Painter.prototype.size_window_to_content()}
--Resizes the current window to the size of the data shown
--
{Function Screen_Painter.prototype.paint_row()}
--Accepts 
       table_no
       row_no
       results
--Creates the HTML elements for the rows of data
--
{Function Screen_Painter.prototype.paint_detail()}
--Accepts 
       detail
       results
--Adds the detail and results to the following objects
       header
       label
       text
       hyperlink
       text_field
       select
       text_Area
--
{Functions Screen_Painter.prototype.header()}
--Accepts
       detail
--Create individual table cells and populates them with
   relevant header data
--Assigns the relevant style to the cell
--
{Function Screen_Painter.prototype.label()}
--Accepts
       detail
--Create individual table cells and populates them with
   relevant label
--Assigns the relevant style to the cell
--
{Function Screen_Painter.prototype.text()}
--Accepts
       detail
       results
--Create individual table cells and populates them with
   relevant text data
--Assigns the relevant style to the cell
--
{Function Screen_Painter.prototype.fill_text()}
--Accepts
       detail
       value
--Checks if detail.valid_values='HTML'
   then populates existing table cells with default values
--
{Function Screen_Painter.prototype.reset_text()}
--Clears existing table cells
--
{Function Screen_Painter.prototype.hyperlink()}
--Accepts
       detail
       results
--Creates hyperlinks
--assigns relavent css to hyperlink
--builds path for hyperlink reference
--
{Function Screen_Painter.prototype.fill_hyperlink()}
--Accepts
       detail
       new_value
--populates existing hyperlinks with hyperlink reference
--
{Function Screen_Painter.prototype.reset_hyperlink()}
--Accepts
       detail
--Clears hyperlink
--
{Function Screen_Painter.prototype.datetime_is_valid()}
--Accepts
       field
       mode
--validates date field and returns value if the data entered is 
   a valid date
--
{Function Screen_Painter.prototype.field_is_valid()}
--Accepts
       field
--Validates the field object and checks the input is correct
--Vaildates the following object types
      text_field
      file_field
      text_area
      radio button
      select dropdown
      checkbox
--
{Function Screen_Painter.prototype.text_field()}
--Accepts
       details
       results
--Creates input fields either text or password
--Sets relevant field permissions (readonly or normal input)
--Sets css class for stylesheet
--Sets correct tab index
--
{Function Screen_Painter.prototype.fill_text_field()}
--Accepts 
       detail
       value
--if passed value is null it puts a default value in the text field
  else it puts the passed value in
--
{Function Screen_Painter.prototype.reset_text_field()}
--Resets the text field to default values
--
{Function Screen_Painter.prototype.file_field()}
--Accepts 
      detail
--Creates frame used to upload files
--
{Function Screen_Painter.prototype.select()}
--Accepts
      detail
      results
--Creates select drop down items
--sets their relevant stylesheets
--
{Function Screen_Painter.prototype.fill_select()}
--Accepts
       detail
       new_value
--Populates drop down list and selects default value
--
{Function Screen_Painter.prototype.text_area()}
--Accepts
       details
       results
--Creates text area HTML elements
--Sets relevant stylesheet
--Sets relevant permissions
--
{Function Screen_Painter.prototype.reset_text_area()}
--Resets the text_area element to the default value
--
{Function Screen_Painter.prototype.radio()}
--Accepts
       detail
       results
--Creates radio item HTML element
--Sets Relevant permissions
--Sets relevant stylesheet
--
{Function Screen_Painter.prototype.fill_radio()}
--Accepts
       detail
       new_value
--Fills the radio select item with relevant data
--Sets default selected item
--
{Function Screen_Painter.prototype.reset_radio()}
--Accepts
       detail
--Resets the radio select to the default value
--
{Function Screen_Painter.prototype.checkbox()}
--Accepts
       detail
       results
--Creates checkbox HTML elements
--Sets relevant permissions
--Sets relevant stylesheet
--
{Function Screen_Painter.prototype.fill_checkbox()}
--Accepts
      detail
      new_value
--Fills the checkbox with the relevant options
--Sets the default value to checked
--
{Function Screen_Painter.prototype.reset_checkbox()}
--Accepts
       detail
--Resets the current checked value to the default value
--
{Function Screen_Painter.prototype.button()}
--Accepts
       detail
--Creates the HTML Button element
--Sets the relevant stylesheet
--Sets the relevant tab index
--
{Function Screen_Painter.prototype.date()}
--Accepts
      detail
      results
--Formats the date correctly
--Sets Font size to 15
--Sets justification to left
--

bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>375</x><y>2740</y><w>220</w><h>205</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Includes</panel_attributes><additional_attributes>110;65;110;150</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>345</x><y>2725</y><w>220</w><h>205</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Includes</panel_attributes><additional_attributes>40;85;40;105;110;105;110;150;110;170</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>190</x><y>2775</y><w>220</w><h>205</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Includes</panel_attributes><additional_attributes>10;35;10;105;215;105;215;120</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>95</x><y>2445</y><w>335</w><h>510</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Includes</panel_attributes><additional_attributes>100;10;110;10;110;410;330;410;330;450</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>600</x><y>2860</y><w>145</w><h>225</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Design_Canvas.html
--
{Loads Scripts}
--Geometry.js
--SVG.js
--Canvas.js
--Design_Canvas_Control.js
--Design_Canvas_Location_Control.js
--Design_Canvas_Container_Control.js
--Design_Canvas_Transfer_Control.js
--Design_Canvas_Movement_Control.js
--Design_Canvas_Site_Control.js
--Design_Canvas_Draw_Control.js
--Design_Canvas_Text_Control.js
--Design_Canvas_Input_Control.js
--Design_Canvas_Output_Control.js
--Canvas_Sidebar.js
--Canvas_Menu.js
--Design_Canvas_Color_Chooser.js
--Design_Canvas_Associations.js
--Design_Canvas_Input_Outputs.js
--Design_Canvas.js
--
{Checks if Adobe SVG Control is installed}
--if it is it creates an svg_canvas_object
  which references Canvas.svg
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>395</x><y>2735</y><w>285</w><h>270</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;265;180;265;180;105;265;105;265;120</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>855</x><y>3060</y><w>105</w><h>60</h></coordinates><panel_attributes>&lt;&lt;SVG&gt;&gt;
Package::Canvas.svg
--
--Creates an empty svg tag
--Sets name to svg_canvas
--Sets width = 1200
--Sets height = 600
bg=green

</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>690</x><y>2965</y><w>220</w><h>205</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;105;75;105;155;105;165;105</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>710</x><y>2650</y><w>175</w><h>110</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Geometry.js
--
--If the containing window is not an embedded frame
      Return window.innerWidth
                  window.innerHeight
                  window.pageXOffset
                  window.pageYOffset
--else
     Return document.documentElement.clientWidth;
                 document.documentElement.clientHeight;
                 document.documentElement.scrollLeft;
                 document.documentElement.scrollTop;
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>595</x><y>2630</y><w>215</w><h>270</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>50;265;160;265;160;140;105;140;105;10;200;10;200;20</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>905</x><y>2650</y><w>160</w><h>110</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::SVG.js
--
{Function SVG.makeCanvas()}
--Accepts
       id
       pixelwidth
       pixelheight
       userwidth
       userheight
--Creates an SVG Element
   sets width &amp; height
   sets a viewbox with userwidth and userheight
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>620</x><y>2630</y><w>385</w><h>275</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;270;165;270;165;140;275;140;275;10;370;10;370;20</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>905</x><y>0</y><w>185</w><h>2600</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Canvas.js
--
--Creates a canvas object with default parameters for height
   width and various other parameters
--
{Function info()}
--Accepts
       str
       index
--Replaces current canvas info text with str parameter
--
{Function svg_and_canvas_setup()}
--Calls
       setup_svg_document
       create_main_canvas
       create_control_canvas
       create_work_canvas
       draw_control_canvas
       draw_work_canvas
--Resizes window
--
{Function setup_svg_document()}
--Creates new SVG blank object
--
{Function create_main_canvas()}
--Creates new Canvas control object
   Sets canvas control width and height
   Sets canvas viewpoint width and height
--
{Function create_work_canvas()}
--Creates new Canvas controlobject
   Sets canvas control width and height
   Sets canvas viewpoint width and height
--
{Function draw_control_canvas()}
--Creates a new SVG canvas object
--sets viewbox x
           viewbox y
           viewbox width
           viewbox height
--sets attributes fill : white
                           stroke : white
--appends button_panel
--sets style attributes
--sets control attribute for scroll up and down   
--if canvas_mode = Designer
      call create_designer_buttons
  else
      call create_display_buttons
--calls reset_control_canvas
--
{Function draw_work_canvas()}
--Creates an SVG rectangle element
--Sets canvas background colour
--Sets canvas info_text
--Creates 44 SVG text elements
   sets x=200
           y=60+increment of 1 for every element
           font_family = vernada
           font_size = 10
           creates node text
--calls canvas_defs
--creates marker red
--
{Function window_resize()}
--Accepts
       evt
--Resizes main_canvas
                control_canvas
                work_canvas
--Resets above canvases
--
{Function zoom_out_canvas()}
--decreases work canvas values for viewbox 
            x
            y
            width
            height
--resets work_canvas
--
{Function zoom_in_canvas()}
--increases work canvas values for viewbox 
            x
            y
            width
            height
--resets work_canvas
--
{Function up_canvas()}
--resets work canvas values for 
   viewbox y = y-height/10
                 if x &lt; -32768
                    x = -32768
--resets work canvas
--
{Function down_canvas()}
--resets work canvas values for 
   viewbox y =y+height/10
                 if y + height &gt; 32768
                    y = 32768-height
--resets work canvas
--
{Function left_canvas()}
--resets work canvas values for 
   viewbox x =x-height/10
                 if x &lt; -32768
                    x = -32768
--resets work canvas
--
{Function right_canvas()}
--resets work canvas values for 
   viewbox x =x+width/10
                 if x+width &gt; 32768
                    x = 32768-width
--resets work canvas
--
{Function center_canvas()}
--if canvas.bbox_is_current = false
   display list first
   if mode = designer or item_type is not in 
     transfer or movement then
     increment the x and y attributes of bbox
--resets box to current
--diagram_width = max value of x -
                               max value of y
--canvas pixels per unit x = viewport_width / diagram_width
                                      y = viewport_height / diagram_height
--reset_work_canvas
--
{Function start_control_up()}
--sets control timer interval
--
{Function stop_control_timer()}
--stops control timer
--
{Function control_up()}
--decrements view box y by 10
--
{Function start_control_down()}
--sets control timer interval to 10
--
{Function control_down()}
--increments view box y by 10
--
{Function reset_control_canvas()}
--Resets control canvas width and height atrributes
--
{Function reset_work_canvas()}
--Resets workl canvas width and height atrributes
--
{Function x_window_to_world()}
--Accepts
       x_window
--Returns (work_canvas viewbox x 
              + x_window/ viewport height
               * viewbox height
--
{Function y_window_to_world()}
--Accepts
       y_window
--Returns (work_canvas viewbox y 
              + y_window/ viewport height
               * viewbox height
--
{Function add_item_to_display_list()}
--Accepts
       type
       id
       element
       item_params
       thick_element
--if type = location
  sets location parameters
    name
    desc
--else if type = container
   sets parameters
     location name
                  desc
     container type name
                             permanent
                             moveable
       creates svg element circle
--else if type = site
  sets parameters
    default supplier site
    default customer site
    creates svg element circle
-- else if type = transfer
    sets parameters 
      transfer_from
      transfer_to
      from_output
      to_input
-- else if type = movement
    sets parameters
       movement_from
       movement_to
       from_output
       to_input
--
{Function delete_location()}
-- deletes specified location
--
{Function delete_container()}
-- deletes specified container
--
{Function delete_transfer()}
-- deletes specified transfer
--
{Function delete_movement()}
--deletes specified movement
--
{Function delete_site()}
--deletes specified site
--
{Function delete_line()}
--deletes specified line
--
{Function delete_text()}
--deletes specified text
--
{Function highlight_container()}
--Accepts 
      container
      type
--If its a transfer it highlights the transfer fields
   else it highlights the movements fields
--
{Function highlight_site()}
--Accepts
       site
       type
--If its a transfer it highlights the transfer fields
   else it highlights the movements fields
--
{Function highlight_transfer()}
--Accepts
       transfer
       hightlight
--highlights transfer elements
--
{Function highlight_movement()}
--Accepts
       Movement
       highlight
--Highlights movements
--
{Function remove_item_from_display_list()}
--Accepts
      Type
      Id
--Deletes item from display
   dependant on the value passed as type
       Location
       Container
       Transfer
       Movement
       Site
       Line
       Text
--
{Function print_canvas()}
--prints current canvas
   print function is invoked differently if mode = Designer
--
{Function save_canvas()}
--If site_name or canvas_name is null
   then pops up a message
   "Canvas site_name and canvas_name not set"
   Ok or Cancel
--Raises another message
  "Do you want to save the current canvas?"
-- if no then return else continue
-- Sets hourglass to busy
--Go through the display list creating a JS array
   that consists of all the display list items
--Calls Sync_post
        passes
           transaction:canvas
           action:update
           canvas : canvas_name
           geometry : list of items on canvas
--Sets hourglass back to idle
--
{Function CANVAS.load_canvas()}
--Accepts
       is_interactive
--if is_interactive is true then
  raises message do you wish to overwrite current
  canvas yes or no?
--sets hourglass to busy
--Clears existing trace
--Fetches new canvas
  Calls sync_post
            passes transaction : canvas
                        action : view
                        canvas : canvas_name
--
{Function clear_canvas()}
--delete canvas locations
                          containers
                          transfers
                          transfers_to
                          transfers_from
                          movements
                          movements_to
                          movements_from
                          lines
                          texts
                          location_associations
                          container_associations
                          container_type_associations
--clears all other canvas variables
--
{Function fill_canvas()}
--Accepts
       display_item_array
--Creates style sheet for canvas
--Creates Move &amp; Transfer elements
--Adds Tracing Tab and tracing canvas
--
{Function canvas_defs()}
--Creates SVG:defs Element
--
{Function canvas_defs()}
--Creates SVG:marker element
--Creates SVG:path element
--
{Function create_gradient()}
--Accepts 
       colour
--Creates SVG:linear:gradient element
--Creates SVG:stop element
--
{Function get_grid_size()}
--Returns the grid size for the current canvas
--
{Function adjust_points_str()}
--Accepts
       points_str
       count
--Adjusts the end point of x and y
--Adjusts the next point of x an y

bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>630</x><y>2590</y><w>575</w><h>325</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;320;170;320;170;195;470;195;470;35;370;35;370;10</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1115</x><y>2165</y><w>200</w><h>435</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Design_Canvas_Control.js
--
{Function Canvas_Control()}
--Accepts
       evt
       evt_id
--Handles the events for the various canvas elements
   and canvas states
--
{Function redraw_current_line()}
--Accepts
       evt
--Deletes the current line
--Redraws it from start point to end point
--
{Function draw_target()}
--Accepts
       type
--draws current target
--
{Function resize_target()}
--Accepts
       evt
--Resizes current target based on evt object passed
--
{Function move_target()}
--Accepts
       evt
       first_move
--Moves the current target position to new position
   based on evt object
{Function setup_down_state()}
--Accepts
       evt
--Handles mouse down event
--
{Function abandon_current_drawing()}
--Deletes all the current lines and objects on the canvas
--
{Function set_down_state()}
--Accepts
       evt
       previous_state
--Stores the current state as previous state
   and invokes the setup_down_state function
--
{Function point_in_target()}
--Accepts
      x
      y
      target
--Returns current target side
--
{Function update_bbox()}
--Accepts
       target
--updates the min and max values for x,y,width and height
--
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>680</x><y>2590</y><w>550</w><h>335</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;330;135;330;135;210;440;210;440;35;535;35;535;10</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>870</x><y>2805</y><w>160</w><h>135</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Design_Canvas_Location_Control.js
--
{Function location_control()}
--Accepts
       evt
       evt_id
--Handles all the mouse events for the location object
  and its various states 
       Move
       Resize
       Onclick 
       OnMouseMove
       OnMouseUp
       OnMouseDown
--Stores Previous State
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>710</x><y>2765</y><w>240</w><h>205</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;165;135;165;135;50;160;50</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1350</x><y>2165</y><w>185</w><h>135</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Design_Canvas_Container_Control.js
--
{Function container_control()}
--Accepts
       evt
       evt_id
--Handles all the mouse events for the location object
  and its various states 
       Move
       Resize
       Onclick 
       OnMouseMove
       OnMouseUp
       OnMouseDown
--Stores Previous State
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>715</x><y>2290</y><w>695</w><h>660</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;645;140;645;140;655;330;655;330;535;425;535;425;350;615;350;615;25;680;25;680;10</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1350</x><y>2330</y><w>185</w><h>135</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Design_Canvas_Transfer_Control.js
--
{Function transfer_control()}
--Accepts
       evt
       evt_id
--Handles all the mouse events for the transfer object
  and its various states 
       Move
       Resize
       Onclick 
       OnMouseMove
       OnMouseUp
       OnMouseDown
--Stores Previous State
     
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1555</x><y>2330</y><w>190</w><h>135</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Design_Canvas_Site_Control.js
--
{Function site_control()}
--Accepts
       evt
       evt_id
--Handles all the mouse events for the movement object
  and its various states 
       Move
       Resize
       Onclick 
       OnMouseMove
       OnMouseUp
       OnMouseDown
--Stores Previous State
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1555</x><y>2165</y><w>190</w><h>135</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Design_Canvas_Movement_Control.js
--
{Function movement_control()}
--Accepts
       evt
       evt_id
--Handles all the mouse events for the movement object
  and its various states 
       Move
       Resize
       Onclick 
       OnMouseMove
       OnMouseUp
       OnMouseDown
--Stores Previous State
bg=green
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1785</x><y>2165</y><w>190</w><h>135</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Design_Canvas_Draw_Control.js
--
{Function draw_control()}
--Accepts
       evt
       evt_id
--Handles all the mouse events for the draw object
  and its various states 
       Move
       Resize
       Onclick 
       OnMouseMove
       OnMouseUp
       OnMouseDown
--Stores Previous State
bg=green
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1785</x><y>2330</y><w>190</w><h>155</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Design_Canvas_Text_Control.js
--
{Function draw_control()}
--Accepts
       evt
       evt_id
--Handles all the mouse events for the draw object
  and its various states 
       Move
       Resize
       Onclick 
       OnMouseMove
       OnMouseUp
       OnMouseDown
--Stores Previous State
{Function adjust_bbox_for_text()}
--updates the min and max values for x,y,width and height
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>2020</x><y>1930</y><w>190</w><h>370</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Design_Canvas_Input_Control.js
--
{Function input_control()}
--Accepts
       evt
       evt_id
--Handles all the mouse events for the input object
  and its various states 
       Move
       Resize
       Onclick 
       OnMouseMove
       OnMouseUp
       OnMouseDown
--Stores Previous State
{Function move_input()}
--Accepts
       evt
--Retrieves the movement and sites parent ids
--calls move_inputs_transfers_and_movements
--
{Function move_input_absolute()}
--Accepts
       x
       y
       input_details
--Retrieves the movement and sites parent ids
--calls move_inputs_transfers_and_movements
--
{Function move_input_relative()}
--Accepts
       dx
       dy
       input_details
--calls move_inputs_transfers_and_movements
--
{Function move_inputs_transfers_and_movements()}
--Accepts
       x
       y
       input_details
--Transfers
   Adjusts the new input according to the passes values
--Movements
   Adjusts the new input according to the passes values
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>2260</x><y>1930</y><w>190</w><h>370</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Design_Canvas_Output_Control.js
--
{Function Output_control()}
--Accepts
       evt
       evt_id
--Handles all the mouse events for the Output object
  and its various states 
       Move
       Resize
       Onclick 
       OnMouseMove
       OnMouseUp
       OnMouseDown
--Stores Previous State
{Function move_output()}
--Accepts
       evt
--Retrieves the movement and sites parent ids
--calls move_inputs_transfers_and_movements
--
{Function move_output_absolute()}
--Accepts
       x
       y
       input_details
--Retrieves the movement and sites parent ids
--calls move_inputs_transfers_and_movements
--
{Function move_output_relative()}
--Accepts
       dx
       dy
       output_details
--calls move_outputs_transfers_and_movements
--
{Function move_outputs_transfers_and_movements()}
--Accepts
       x
       y
       output_details
--Transfers
   Adjusts the new output according to the passes values
--Movements
   Adjusts the new output according to the passes values
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>710</x><y>2455</y><w>765</w><h>500</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;490;130;490;130;495;345;495;345;380;450;380;450;200;635;200;635;25;750;25;750;10</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>715</x><y>2165</y><w>850</w><h>795</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;790;140;790;355;790;355;685;490;685;490;510;830;510;830;10;840;10</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>695</x><y>2455</y><w>930</w><h>510</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;505;385;505;385;405;520;405;520;230;865;230;865;20;915;20;915;10</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>700</x><y>2165</y><w>1095</w><h>810</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;805;390;805;390;705;525;705;525;530;870;530;870;320;1065;320;1065;10;1085;10</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>700</x><y>2330</y><w>1095</w><h>655</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;650;400;650;400;550;535;550;535;375;880;375;880;165;1075;165;1075;10;1085;10</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>700</x><y>2290</y><w>1375</w><h>705</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;700;410;700;410;600;545;600;545;425;890;425;890;215;1295;215;1295;30;1360;30;1360;10</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>705</x><y>2290</y><w>1630</w><h>710</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;705;415;705;415;610;550;610;550;435;895;435;895;225;1300;225;1300;40;1615;40;1615;10</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>2480</x><y>2085</y><w>190</w><h>1950</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Canvas_Sidebar.js
--
{Function create_designer_buttons()}
--Creates buttons for
       site
       location
       container
       transfer
       movement
       draw
       text
       print
       save
    using create_button function
    on the designer canvas
--
{Function create_display_buttons()}
--Creates buttons for
       print
    using create_button function
    on the designer canvas
--
{Function create_button()}
--Accepts
       str
       image
       x
       y
       width
       height
       callback
--Creates a SVG:image element
   with the passed attributes
--
{Function navigation_buttons()}
--Accepts
       y
--Creates the following buttons
        up
        down
        left
        right
        zoom in
        zoom out
        center
--
{Function location_onclick()}
--Accepts
       evt
--Calls canvas_control
     passes   evt
                   location_button_event
--
{Function container_onclick()}
--Accepts
       evt
--Calls canvas_control
     passes   evt
                   container_button_event
--
{Function save_onclick()}
--Accepts
       evt
--Calls canvas_control
     passes   evt
                   save_button_event
--
{Function zoom_in_onclick()}
--Accepts
       evt
--Calls canvas_control
     passes   evt
                   zoom_in_button_event
--
{Function zoom_out_onclick()}
--Accepts
       evt
--Calls canvas_control
     passes   evt
                   zoom_out_button_event
--
{Function center_onclick()}
--Accepts
       evt
--Calls canvas_control
     passes   evt
                   center_button_event
--
{Function move_up_onmousedown()}
--Accepts
       evt
--Calls canvas_control
     passes   evt
                   move_up_onmousedown_event
--
{Function move_up_onmouseup()}
--Accepts
       evt
--Calls canvas_control
     passes   evt
                   move_up_onmouseup_event
--
{Function move_left_onmousedown()}
--Accepts
       evt
--Calls canvas_control
     passes   evt
                   move_left_mousedown_event
--
{Function move_left_onmouseup()}
--Accepts
       evt
--Calls canvas_control
     passes   evt
                   move_left_mouseup_event
--
{Function move_right_onmousedown()}
--Accepts
       evt
--Calls canvas_control
     passes   evt
                   move_right_mousedown_event
--
{Function move_right_onmouseup()}
--Accepts
       evt
--Calls canvas_control
     passes   evt
                   move_right_mouseup_event
--
{Function move_down_onmousedown()}
--Accepts
       evt
--Calls canvas_control
     passes   evt
                   move_down_mousedown_event
--
{Function move_down_onmouseup()}
--Accepts
       evt
--Calls canvas_control
     passes   evt
                   move_down_mouseup_event
--
{Function menu_control1()}
--Accepts
       evt
       evt_id
--Calls switch_button function and passes evt_id 
    of one of the following 
       location_button_event
       container_button_event
       transfer_button_event
       movement_button_event
       site_button_event
       draw_button_event
       text_button_event
--Calls print_canvas Function for
        print_button_event
--Calls save_canvas Function for
        save_button_event
--Calls zoom_in_canvas Function for
        zoom_in_button_event
--Calls zoom_out_canvas Function for
        zoom_out_button_event
--Calls center_canvas Function for
        center_button_event
--
{Function menu_control2()}
--Accepts
       evt
       evt_id
--For evt_id
       move_up_mousedown_event
           calls setinterval passes up_canvas
       move_left_mousedown_event
           calls setinterval passes left_canvas
       move_right_mousedown_event
           calls setinterval passes right_canvas
       move_down_mousedown_event
           calls setinterval passes down_canvas
--
{Function menu_control3()}
--Accepts
       evt
       evt_id
--Calls clearInterval
--
{Function menu_control4()}
--Accepts
       evt
       evt_id
--For evt_id
       zoom_in_button_event
           calls zoom_in_canvas
       zoom_out_button_event
           calls zoom_out_canvas
       center_button_event
           calls center_canvas
       print_button_event
           calls print_canvas
--
{Function switch_button()}
--Accepts
       evt_id
--For state values
     default_state
         calls set_button 
             passes evt_id and non_event
     location_state
         calls set_button 
             passes evt_id and location_button_event
     container_state
         calls set_button 
             passes evt_id and container_button_event
     transfer_state
         calls set_button 
             passes evt_id and transfer_button_event
     movement_state
         calls set_button 
             passes evt_id and movement_button_event
     site_state
         calls set_button 
             passes evt_id and site_button_event
     text_state
         calls set_button 
             passes evt_id and text_button_event
--
{Function set_button()}
--Accepts
       evt_id
       previous_button
--For evt_id of
     location_button_event
         sets canvas_state = location_state
     container_button_event
         sets canvas_state = container_state
     transfer_button_event
         sets canvas_state = transfer_state
     movement_button_event
         sets canvas_state = movement_state
     site_button_event
         sets canvas_state = site_state
     draw_button_event
         sets canvas_state = draw_state
     text_button_event
         sets canvas_state = text_state
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>655</x><y>2085</y><w>1835</w><h>925</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;920;475;920;475;825;610;825;610;650;955;650;955;440;1360;440;1360;255;1805;255;1810;10;1825;10</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>2260</x><y>2350</y><w>190</w><h>310</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Canvas_Menu.js
--
{Function Canvas_Menu()}
--Accepts
       name
       canvas
       width
       start_date
       menuitem_defs
--Creats SVG menu object
--Sets style
--Sets width and height
--
{Function Canvas_Menu.prototype.menu_click ()}
--Accepts
       evt
--Calls evt.stopPropagation function
--
{Function Canvas_Menu.prototype.menuitem_click()}
--Accepts
      evt
--If canvas_type is in 'Routeing' or 'Tracing'
    calls obj.canvas.control function
   else
    calls canvas_control function
--
{Function Canvas_Menu.prototype.menuitem_over()}
--Sets the colour for the menu item when the mouse
   cursor moves over it
--
{Function Canvas_Menu.prototype.menuitem_out()}
--Sets the colour for the menu item when the mouse
   cursor moves away from it
--
{Function Canvas_Menu.prototype.control()}
--Accepts
      evt
      evt_id
--Removes menu item from the menu
--Sets the canvas state to previous canvas state

bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>650</x><y>2340</y><w>1620</w><h>680</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;675;490;675;490;580;625;580;625;405;970;405;970;195;1375;195;1375;10;1585;10;1585;20;1610;20</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>2260</x><y>2675</y><w>190</w><h>690</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Design_Canvas_Colour_Chooser.js
--
--Initialises named_colours array and sets
   predefined colours for it
--
{Function Color_Chooser()}
--Accepts
       canvas
       start_state
--Sets current canvas and start_state to
   passed values
--Creates SVG elements
      rect
      line
      text
--Sets onlick events for the above to call function
   color_chooser_bg_click
--Sets width height and various style attributes
--
{Function Color_Chooser.prototype.show()}
--Accepts
       evt
       item
       child_id
       child_type
--Retrieves view port width and height
--sets various style and width and height attributes
--Shows colour chooser
--
{Function color_chooser_click()}
--Accepts 
       evt
--Calls obj.canvas.control if canvas_type
   is Routeing or Tracing and passes 
      obj.canvas.color_chooser_click_event
      evt
   else
   Calls canvas_control and passes
      evt
      color_chooser_click_event
--
{Function color_chooser_close_click()}
--Accepts
       evt
--Calls obj.canvas.control if canvas_type
   is Routeing or Tracing and passes 
      obj.canvas.color_chooser_close_event
      evt
   else
   Calls canvas_control and passes
      evt
      color_chooser_close_event
--
{Function Color_Chooser.prototype.control()}
--Accepts
       evt
       evt_id
--For evt_id of 
       color_chooser_click_event
          Sets style attributes
          creates a marker
          sets canvas_state to previous state
       color_chooser_close_event
          sets canvas_state to previous state  
--
{Function color_chooser_control()}
--Accepts
       evt
       evt_id
--For evt_id of
    color_chooser_click_event
       calls set_colour passes evt
    color_chooser_close_event
       resets the colour of the menu item
--
{Function set_color()}
--Accepts
       evt
--Sets the background colour for the following elements 
     location
     container
     transfer
     movement
     site
     line
     text

bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>705</x><y>2350</y><w>1565</w><h>675</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;670;445;670;445;580;580;580;580;405;925;405;925;195;1330;195;1330;10;1525;10;1525;335;1555;335</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>2250</x><y>3385</y><w>215</w><h>1060</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Design_Canvas_Associations.js
--
{Function Canvas()}
--Empty Function
--
{Function Canvas.prototype.associate_location()}
--Accepts
       location_name
       location_desc
--Sets up canvas associations for location with types
        Location
        Container
--
{Function Canvas.prototype.disassociate_location()}
--Disassociate types location and container from location
--
{Function Canvas.prototype.associate_container_type()}
--Accepts
       container_type_name
       container_type_permanent
       container_type_moveable
--Sets up canvas associations for location with types
        Location
        Container
-- 
{Function Canvas.prototype.disassociate_container_type()}
--Disassociate types location and container from 
     container type
--
{Function Canvas.prototype.associate_container()}
--Accepts
       container_name
       container_desc
--Associates the canvas with a container
--
{Function Canvas.prototype.disassociate_container()}
--Accepts
       container_name
--disassociates container
--
{Function Canvas.prototype.container_is_associated()}
--Accepts
       container_name
--Returns true if container associations exist
--
{Function Canvas.prototype.associate_site()}
--Accepts
       site_name
--Associates canvas with site_name
--
{Function Canvas.prototype.disassociate_site()}
--Accepts
       site_name
--disassociates site_name from canvas
--
{Function Canvas.prototype.site_is_associated()}
--Accepts
       site_name
--Checks to see if a site is associated with the current canvas
--
{Function Canvas.prototype.has_associated_containers()}
--Accepts
       item
       window
--Checks whether or not there are containers associated
   with the specified location
--
{Function Canvas.prototype.location_list_to_select_value()}
--Accepts
       location_list
--Returns list of locations
--
{Function Canvas.prototype.remove_location_association()}
--Accepts 
       location
       window
--Removes the containers associated with the specified
   locations
--
{Function Canvas.prototype.add_location_association()}
--Accepts
       location
       location_select
       window
--Adds location associations to containers that already
   have containers associated to them
--
{Function Canvas.prototype.container_type_list_to_select_value()}
--Accepts 
       ct_list
--Creats lists of container types and returns list
--
{Function Canvas.prototype.remove_container_type_association()}
--Accept 
      ct
      window
--Removes current container type association
--
{Function Canvas.prototype.add_container_type_association()}
--Accept
       ct
       ct_select
       window
--Returns the selected container type from the container list
--
{Function Canvas.prototype.container_list_to_select_value()}
--Accepts
       c_list
--Creats lists of container and returns list
---
{Function Canvas.prototype.remove_container_association()}
--Accepts
      index
--Removes current container association
--
{Function Canvas.prototype.add_container_association()}
--Returns the selected container from the container list
--
{Function Canvas.prototype.site_list_to_select_value()}
--Accept
      current_site_name
      site_name
      sites
--Creates and returns list of sites
--
{Function Canvas.prototype.remove_site_association()}
--Accepts
       Index
--Removes site from list of sites
--
{Function Canvas.prototype.add_site_association()}
--Accepts
       index
--Adds site to list of sites
--
{Function Canvas.prototype.set_default_sites()}
--Accepts
       site
       def_sup
       def_cust
--Sets default supplier site
                       customer_site
                       
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>2010</x><y>2670</y><w>195</w><h>320</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Design_Canvas_Input_Outputs.js
--
{Function create_input()}
--Accepts
       evt
       type
--Draws input elements
--
{Function create_output()}
--Accepts
      evt
      type
--Draws output elements
--
{Function delete_input()}
--Accept
      item
      input_id
--Deletes input elements
--
{Function delete_output()}
--Accept
      item
      output_id
--Removes output elements
--
{Function highlight_input()}
--Accepts
      item
      input_id
      type
      local_highlight
--Highlights transfer_to and movement_to input elements
--
{Function highlight_output()}
--Accepts
       item
       output_id
       type
       local_highlight
--Highlights transfer_to and movement_to output elements
--
bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>700</x><y>2360</y><w>1558</w><h>1038</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;670;460;670;460;580;595;580;595;405;940;405;940;195;1345;195;1345;10;1520;10;1520;1030;1550;1030</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>700</x><y>2555</y><w>1385</w><h>490</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;485;470;485;470;395;605;395;605;220;950;220;950;10;1370;10;1370;40;1370;115</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>2010</x><y>3010</y><w>195</w><h>130</h></coordinates><panel_attributes>&lt;&lt;JavaScript&gt;&gt;
Package::Design_Canvas.js
--
{Function setup()}
--Checks if SVG viewer is installed
--sets canvas mode = designer
          canvas type = design
--calls svg_and_canvas_setup
          setup_work_canvas_for_design
          CANVAS.load_canvas(false)
--
{Function setup_work_canvas_for_design()}
--Creates menu items
--Calls colour chooser and canvas control
--
{Function design_contextmenu()}
--Creates context menu items


bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>710</x><y>2565</y><w>1310</w><h>490</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;485;470;485;470;395;605;395;605;220;950;220;950;10;1255;10;1255;455;1300;455</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>600</x><y>3105</y><w>145</w><h>105</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Routeing_canvas.html
--
--Calls setup() function
--
{Loads Scripts}
--Geometry.js
--SVG.js
--Canvas_Menu.js
--Design_Color_Chooser.js
--Map.js
--
{Function setup()}
--Creates new routing map object

bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>400</x><y>2955</y><w>295</w><h>205</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;60;190;60;190;155;200;155</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>600</x><y>3220</y><w>145</w><h>115</h></coordinates><panel_attributes>&lt;&lt;HTML&gt;&gt;
Package::Tracking.html
--
--Calls setup() function
--
{Loads Scripts}
--Geometry.js
--SVG.js
--Canvas .js
--Tracing_Canvas_Control.js
--Canvas_Sdebar.js
--Tracing_Canvas.js
--
{Function setup()}
--Creates new routing map object

bg=green</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>400</x><y>3015</y><w>213</w><h>218</h></coordinates><panel_attributes>lt=&gt;&gt;&gt;&gt;&gt;-
Calls</panel_attributes><additional_attributes>10;10;185;10;185;210;200;210</additional_attributes></element></umlet_diagram>